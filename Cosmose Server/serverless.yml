service: cosmose

provider:
  name: aws
  runtime: nodejs8.10
  region: eu-west-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:*
      Resource: "arn:aws:dynamodb:eu-west-1:*:*"
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: "Allow"
      Action:
        - "rekognition:*"
      Resource: "*"
Globals:
  Api:
    # Allows an application running locally on port 8080 to call this API
    Cors:
      AllowMethods: "'OPTIONS,POST,GET'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'http://localhost:4200'"
functions:
  templateHandler:
    handler: src/handlers/example_handler.handler
    events:
      - http:
          path: template
          method: get
          cors: true
  contextHandler:
    handler: src/handlers/init_context_handler.handler
    events:
      - http:
          path: init
          method: post
          cors: true
  arrivalDetection:
    handler: src/handlers/arrival_handler.handler
    events:
      - http:
          path: arrival/{faceID}
          method: post
          cors: true
  textAnalysis:
    handler: src/handlers/speech_analysis_handler.handler
    events:
      - http:
          path: speech-analysis
          method: post
          cors: true 
  signup:
    handler: src/handlers/signup_handler.handler
    events:
      - http:
          path: sign-up
          method: get
          cors: true   
  signin:
    handler: src/handlers/signin_handler.handler
    events:
      - http:
          path: sign-in
          method: get
          cors: true  
  departureDetection:
    handler: src/handlers/departure_handler.handler
    events:
      - http:
          path: departure/{login}
          method: post
          cors: true
  sendMail:
    handler: src/handlers/mail_handler.handler
    events:
      - http:
          path: send-mail
          method: post
          cors: true
  faceApi:
    handler: src/handlers/faceapi_handler.handler
    events:
      - http:
          path: faceapi
          method: get
          cors: true
  addFace:
    handler: src/handlers/addface_handler.handler
    events:
      - http:
          path: addFace
          method: post
          cors: true
  roomReservation:
    handler: src/handlers/reservation_handler.handler
    events:
      - http:
          path: reservation
          method: post
          cors: true
resources:
  Resources:
    RoomTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: 'Room'
        AttributeDefinitions:
          - AttributeName: Floor
            AttributeType: S
          - AttributeName: Name
            AttributeType: S
        KeySchema:
          - AttributeName: Floor
            KeyType: HASH
          - AttributeName: Name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    OpenSpaceTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: 'OpenSpace'
        AttributeDefinitions:
          - AttributeName: Floor
            AttributeType: S
          - AttributeName: Name
            AttributeType: S
        KeySchema:
          - AttributeName: Floor
            KeyType: HASH
          - AttributeName: Name
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    RocketTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: 'Rocket'
        AttributeDefinitions:
          - AttributeName: FaceID
            AttributeType: S
        KeySchema:
          - AttributeName: FaceID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    TeamTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: 'Team'
        AttributeDefinitions:
          - AttributeName: Name
            AttributeType: S
        KeySchema:
          - AttributeName: Name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST